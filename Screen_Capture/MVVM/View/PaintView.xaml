<UserControl x:Class="Screen_Capture.MVVM.View.PaintView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Screen_Capture.MVVM.View"
             xmlns:vm="clr-namespace:Screen_Capture.MVVM.ViewModel"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             x:Name="paintview"
               TextElement.Foreground="{DynamicResource MaterialDesignBody}"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="13"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
     Background="{DynamicResource MaterialDesignPaper}"
     FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Viewbox>
    <Grid Width="{Binding ElementName=paintview, Path=ActualWidth}" Height="{Binding ElementName=paintview ,Path=ActualHeight}">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.518,0.024" StartPoint="0.037,0.973">
                <GradientStop Color="#FFBCC3C5"/>
                <GradientStop Color="#FFFBFBFF" Offset="0.641"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <!--
         上窗最上層
        -->       
        <Grid Grid.Row="0" Background="Transparent">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{ Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor },Path=DataContext.Drag_Command }" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="12 "   Style="{StaticResource  MiniButtonStyle}"  ></Button>

            <Button Grid.Column="13"   Style="{StaticResource  MaxButtonStyle}"  ></Button>

            <Button Grid.Column="14" Style="{StaticResource  CloseButtonStyle}"   ></Button>
        </Grid>
        
        <!--
        ToolBar 介面
        -->
            <ToolBarTray Grid.Row="1">
                <ToolBar
    Style="{DynamicResource MaterialDesignToolBar}"
    ClipToBounds="False">
                    <Button
      ToolTip="Save"
      Content="{materialDesign:PackIcon Kind=ContentSave}" />
                    <Separator />
                    <Button
      Command="Cut"
      ToolTip="Cut"
      ToolBar.OverflowMode="AsNeeded"
      Content="{materialDesign:PackIcon Kind=ContentCut}" />
                    <Button
      Command="Copy"
      ToolTip="Copy that stuff"
      ToolBar.OverflowMode="AsNeeded"
      Content="{materialDesign:PackIcon Kind=ContentCopy}" />
                    <Separator />
                    <Button
      Command="Paste"
      ToolTip="Paste some stuff"
      ToolBar.OverflowMode="AsNeeded"
      Content="{materialDesign:PackIcon Kind=ContentPaste}" />
                    <!-- when badging in a toolbar, make sure the parent ToolBar.ClipToBounds="False", and
                   manually apply the button style -->
                    <materialDesign:Badged
      ToolBar.OverflowMode="AsNeeded"
      Badge="{materialDesign:PackIcon Alert}"
      CornerRadius="5">
                    </materialDesign:Badged>
                    <Separator />
                    <ListBox>
                        <ListBoxItem
        ToolTip="This is a lonley toggle with TextBlock instead of icon">
                            <TextBlock
          Text="W" />
                        </ListBoxItem>
                    </ListBox>
                    <Separator />
                    <ListBox
      SelectedIndex="0">
                        <ListBox.ToolTip>
                            <StackPanel>
                                <TextBlock
            Text="MaterialDesignToolToggleFlatListBox" />
                                <TextBlock
            Text="Exclusive selection" />
                                <TextBlock
            Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                            </StackPanel>
                        </ListBox.ToolTip>
                        <ListBoxItem
        Content="{materialDesign:PackIcon Kind=FormatAlignLeft}" />
                        <ListBoxItem
        Content="{materialDesign:PackIcon Kind=FormatAlignCenter}" />
                        <ListBoxItem
        Content="{materialDesign:PackIcon Kind=FormatAlignRight}" />
                        <ListBoxItem
        Content="{materialDesign:PackIcon Kind=FormatAlignJustify}" />
                    </ListBox>
                    <Separator />
                    <ListBox
      SelectionMode="Extended">
                        <ListBox.ToolTip>
                            <StackPanel>
                                <TextBlock
            Text="MaterialDesignToolToggleListBox" />
                                <TextBlock
            Text="Multiple selection" />
                                <TextBlock
            Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                            </StackPanel>
                        </ListBox.ToolTip>
                        <ListBoxItem
        Content="{materialDesign:PackIcon Kind=FormatBold}" />
                        <ListBoxItem
        Content="{materialDesign:PackIcon Kind=FormatItalic}" />
                        <ListBoxItem
        Content="{materialDesign:PackIcon Kind=FormatUnderline}" />
                    </ListBox>
                    <Separator />
                    <StackPanel ToolBar.OverflowMode="AsNeeded" >
                    <xctk:ColorPicker   Width="200" Name="cp"  DisplayColorAndName="True"   AvailableColorsSortingMode="HueSaturationBrightness" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedColorChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="cp_SelectedColorChanged_1">
                                    </ei:CallMethodAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                    </xctk:ColorPicker>
                        <xctk:ColorPicker Width="200"  DisplayColorAndName="True"   AvailableColorsSortingMode="HueSaturationBrightness" ></xctk:ColorPicker>
                    </StackPanel>
                        <Separator />
                    <Label
      Content="Font size:"
      VerticalAlignment="Center" />
                    <ComboBox>
                        <ComboBoxItem
        Content="10" />
                        <ComboBoxItem
        IsSelected="True"
        Content="12" />
                        <ComboBoxItem
        Content="14" />
                        <ComboBoxItem
        Content="16" />
                    </ComboBox>
                    <CheckBox
      Content="Check" />
                   
             
                 
                </ToolBar>
            </ToolBarTray>
            <TabControl
                Grid.Row="2"
  Style="{StaticResource MaterialDesignNavigatilRailTabControl}"
  
  TabStripPlacement="Top"
     ItemsSource="{Binding test}"
>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel
                 
        Height="auto"
        Width="auto">
                            <TextBlock
          Text="All Files  gdsgsd"
          HorizontalAlignment="Center" />
                            <Button Command="{Binding CloseCommand}" Background="#FFEAEAEA" BorderBrush="{x:Null}" >
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="CloseThick"                                   
          Width="24"
          Height="24"
          HorizontalAlignment="Center" />
                                </Button.Content>
                            </Button>
                   
                        </DockPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                
            </TabControl>
        </Grid>
    </Viewbox>
</UserControl>
